{"version":3,"sources":["containers/Light.js","containers/AddLight.js","views/Lights.js","containers/Flash.js","color.js"],"names":["Light","api_key","id","light","modelIds","setType","setMessage","deleteLight","axios","delete","then","fetchedData","console","log","data","catch","error","className","onClick","put","title","options","value","onChange","e","modelid","post","placeholder","confirmAlert","message","buttons","label","AddLight","useState","protocol","setProtocol","type","Groups","API_KEY","lights","setLights","setModelIds","lightForm","setLightForm","fetchLights","undefined","get","useEffect","interval","setInterval","clearInterval","Flash","duration","Object","entries","map","persistOnHover","cieToRgb","x","y","brightness","z","Y","toFixed","X","Z","red","green","blue","Math","pow","round","isNaN","floor","colorTemperatureToRgb","mireds","hectemp","rgbToCie","parseFloat"],"mappings":"6QA2FeA,EA/ED,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,QAASC,EAA+C,EAA/CA,GAAIC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAmBhDC,EAAc,WAClBC,IAAMC,OAAN,eAAqBR,EAArB,mBAAuCC,IACpCQ,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAYG,MACxBR,EAAW,8BACXD,EAAQ,QACRA,EAAQ,cACPU,OAAM,SAACC,GACRJ,QAAQI,MAAMA,GACdV,EAAW,wCACXD,EAAQ,QACRA,EAAQ,aAmCd,OACE,qCACE,qBAAKY,UAAU,gBAAf,SACE,cAAC,IAAD,CAAaC,QAAS,WAjC1BV,IAAMW,IAAN,eAAkBlB,EAAlB,mBAAoCC,EAApC,UAAgD,CAAE,MAAS,WACxDQ,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAYG,MACxBR,EAAW,iBACXD,EAAQ,QACRA,EAAQ,cACPU,OAAM,SAACC,GACRJ,QAAQI,MAAMA,GACdV,EAAW,wCACXD,EAAQ,QACRA,EAAQ,iBAyBTF,EAAK,KAJR,IAImBA,EAAK,MAAL,WAA+B,cAAC,IAAD,CAASiB,MAAM,eAAkB,cAAC,IAAD,CAAaA,MAAM,eAAgB,uBACpH,cAAC,IAAD,CAAUC,QAASjB,EAAUkB,MAAOnB,EAAK,QAAaoB,SAAU,SAACC,GAAD,OAtBhDC,EAsBkED,EAAEF,MArBtFV,QAAQC,IAAR,eAAeX,EAAKuB,SACpBjB,IAAMkB,KAAN,8BAA8BxB,EAAKuB,IAChCf,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAYG,MACxBR,EAAW,mBACXD,EAAQ,QACRA,EAAQ,cACPU,OAAM,SAACC,GACRJ,QAAQI,MAAMA,GACdV,EAAW,wCACXD,EAAQ,QACRA,EAAQ,YAZK,IAACoB,GAsB4EE,YAAY,yBAL1G,aAMYxB,EAAK,SAAa,uBAN9B,QAM0CA,EAAK,aAAL,GAA4B,uBACpE,cAAC,IAAD,CAAiBiB,MAAM,SAASF,QAAS,WArE3CU,uBAAa,CACXR,MAAO,gBAAkBjB,EAAK,KAC9B0B,QAAS,2BACTC,QAAS,CACP,CACEC,MAAO,MACPb,QAAS,kBAAMX,MAEjB,CACEwB,MAAO,YAqDb,KAOoE,cAAC,IAAD,CAAgBX,MAAM,WACxF,uBAAM,2BC8DGY,EA/IE,WAAO,IAAD,EAEaC,mBAAS,QAFtB,mBAEZC,EAFY,KAEFC,EAFE,KAoCnB,OAEI,uBAAMlB,UAAU,WAAhB,UACI,cAAC,IAAD,CACII,QApCM,CACd,CAAEC,MAAO,OAAQS,MAAO,cACxB,CAAET,MAAO,WAAYS,MAAO,YAC5B,CAAET,MAAO,OAAQS,MAAO,QACxB,CAAET,MAAO,SAAUS,MAAO,UAC1B,CAAET,MAAO,UAAWS,MAAO,WAC3B,CAAET,MAAO,QAASS,MAAO,UACzB,CAAET,MAAO,MAAOS,MAAO,QA8BfT,MAAOY,EACPX,SAAU,SAACC,GAAD,OAAOW,EAAYX,EAAEF,QAC/BK,YAAY,0BAEhB,sBAAKV,UAAU,eAAf,UACI,6CACA,uBACImB,KAAK,OACLT,YAAY,mBAMH,SAAbO,GACA,qCACI,sBAAKjB,UAAU,eAAf,UACI,yCACA,uBACImB,KAAK,OACLT,YAAY,2BAGpB,qBAAKV,UAAU,eAAf,SACI,cAAC,IAAD,CACII,QAtCF,CAClB,CAAEC,MAAO,SAAUS,MAAO,eAC1B,CAAET,MAAO,SAAUS,MAAO,kBAC1B,CAAET,MAAO,SAAUS,MAAO,2BAC1B,CAAET,MAAO,SAAUS,MAAO,eAC1B,CAAET,MAAO,SAAUS,MAAO,gBAoCNJ,YAAY,8BAKV,YAAbO,GAAuC,UAAbA,IAAyB,qCAChD,sBAAKjB,UAAU,eAAf,UACI,8CACA,uBACImB,KAAK,OACLT,YAAY,cAGpB,cAAC,IAAD,CACIN,QA9DC,CACjB,CAAEC,MAAO,OAAQS,MAAO,QACxB,CAAET,MAAO,MAAOS,MAAO,OACvB,CAAET,MAAO,UAAWS,MAAO,WAC3B,CAAET,MAAO,MAAOS,MAAO,QA6DPJ,YAAY,sBAEhB,cAAC,IAAD,CACIN,QA3EE,CAClB,IACA,IACA,IACA,KA0EgBM,YAAY,0BAKP,UAAbO,GACA,sBAAKjB,UAAU,eAAf,UACI,yCACA,uBACImB,KAAK,SACLT,YAAY,mBAKP,aAAbO,GACA,sBAAKjB,UAAU,eAAf,UACI,8CACA,uBACImB,KAAK,OACLT,YAAY,QAMP,WAAbO,GAAyB,qCACrB,sBAAKjB,UAAU,eAAf,UACI,8CACA,uBACImB,KAAK,OACLT,YAAY,iBAGpB,sBAAKV,UAAU,eAAf,UACI,6CACA,uBACImB,KAAK,OACLT,YAAY,mBAK5B,qBAAKV,UAAU,eAAf,SACI,uBAAOmB,KAAK,SAASd,MAAM,YAAYL,UAAU,wB,QCvIlD,SAASoB,EAAT,GAA8B,IAAZC,EAAW,EAAXA,QAAW,EAEdL,mBAAS,IAFK,mBAEnCM,EAFmC,KAE3BC,EAF2B,OAGVP,mBAAS,IAHC,mBAGnC7B,EAHmC,KAGzBqC,EAHyB,OAIlBR,mBAAS,QAJS,mBAInCG,EAJmC,KAI7B/B,EAJ6B,OAKZ4B,mBAAS,cALG,mBAKnCJ,EALmC,KAK1BvB,EAL0B,OAMR2B,oBAAS,GAND,mBAMnCS,EANmC,KAMxBC,EANwB,KAQpCC,EAAc,gBACFC,IAAZP,GACF9B,IACGsC,IADH,WAEGpC,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAYG,MACxB0B,EAAU7B,EAAYG,SACrBC,OAAM,SAACC,GAAYJ,QAAQI,MAAMA,OA2C1C,OATA+B,qBAAU,WACRH,SAZgBC,IAAZP,GACF9B,IACGsC,IADH,gBAEGpC,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAYG,MACxB2B,EAAY9B,EAAYG,KAAZ,WACXC,OAAM,SAACC,GAAYJ,QAAQI,MAAMA,MAQxC,IAAMgC,EAAWC,aAAY,WAC3BL,MACC,KACH,OAAO,kBAAMM,cAAcF,MAC1B,CAACV,IAGF,sBAAKrB,UAAU,UAAf,UACY,SAATmB,GAAmB,cAACe,EAAA,EAAD,CAAOf,KAAMA,EAAMP,QAASA,EAASuB,SAAS,OAAO/C,QAASA,IAClF,sBAAKY,UAAU,WAAf,UACE,sBAAKA,UAAU,UAAUC,QAAS,gBA1CtB2B,IAAZP,GACF9B,IACGkB,KADH,eACgBY,EADhB,WACkC,IAC/B5B,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAYG,MACxBR,EAAW,+BACXD,EAAQ,QACRA,EAAQ,cACPU,OAAM,SAACC,GACRJ,QAAQI,MAAMA,GACdV,EAAW,wCACXD,EAAQ,QACRA,EAAQ,aA8BV,4BACA,qBAAKY,UAAU,qBACf,mBAAGC,QAAS,kBAAMyB,GAAcD,IAAYzB,UAAU,6BAAtD,gCACCyB,GAAa,cAAC,EAAD,IACbW,OAAOC,QAAQf,GAAQgB,KAAI,mCAAErD,EAAF,KAAMC,EAAN,YAC1B,cAAC,EAAD,CAEEF,QAASqC,EACTpC,GAAIA,EACJC,MAAOA,EACPC,SAAUA,EACVC,QAASA,EACTC,WAAYA,GANPJ,c,gCC1EjB,2EAIe,SAASiD,EAAT,GAAoD,IAApCf,EAAmC,EAAnCA,KAAMP,EAA6B,EAA7BA,QAASuB,EAAoB,EAApBA,SAAU/C,EAAU,EAAVA,QAEpD,OACI,cAAC,IAAD,CAAc+C,SAAUA,EAAUI,gBAAgB,EAAlD,SACA,qBAAKvC,UAAU,wBAAf,SACI,sBAAKA,UAAS,uBAAkBmB,GAAhC,UAAwC,4BAAIP,IAAY,qBAAKZ,UAAU,OAAf,SAAsB,cAAC,IAAD,CAASC,QAAS,kBAAMb,EAAQ,sB,gCCTnH,SAASoD,EAASC,EAAGC,EAAGC,QAEVf,IAAfe,IACFA,EAAa,KAGf,IAAIC,EAAI,EAAMH,EAAIC,EACdG,GAAKF,EAAa,KAAKG,QAAQ,GAC/BC,EAAIF,EAAIH,EAAID,EACZO,EAAIH,EAAIH,EAAIE,EAGZK,EAAU,SAAJF,EAAmB,QAAJF,EAAmB,QAAJG,EACpCE,EAAa,SAAJH,EAAmB,SAAJF,EAAmB,QAAJG,EACvCG,EAAW,QAAJJ,EAAmB,QAAJF,EAAmB,QAAJG,EA0CzC,OAvCIC,EAAME,GAAQF,EAAMC,GAASD,EAAM,GACrCC,GAAgBD,EAChBE,GAAcF,EACdA,EAAM,GACGC,EAAQC,GAAQD,EAAQD,GAAOC,EAAQ,GAChDD,GAAYC,EACZC,GAAcD,EACdA,EAAQ,GACCC,EAAOF,GAAOE,EAAOD,GAASC,EAAO,IAC9CF,GAAYE,EACZD,GAAgBC,EAChBA,EAAO,GAITF,EACEA,GAAO,SACH,MAAQA,EACR,MAAgBG,KAAKC,IAAIJ,EAAK,EAAM,KAAO,KACjDC,EACEA,GAAS,SACL,MAAQA,EACR,MAAgBE,KAAKC,IAAIH,EAAO,EAAM,KAAO,KACnDC,EACEA,GAAQ,SACJ,MAAQA,EACR,MAAgBC,KAAKC,IAAIF,EAAM,EAAM,KAAO,KAGlDF,EAAMG,KAAKE,MAAY,IAANL,GACjBC,EAAQE,KAAKE,MAAc,IAARJ,GACnBC,EAAOC,KAAKE,MAAa,IAAPH,GAEdI,MAAMN,KAAMA,EAAM,GAElBM,MAAML,KAAQA,EAAQ,GAEtBK,MAAMJ,KAAOA,EAAO,GAEjB,QAAUC,KAAKI,MAAMP,GAAO,IAAOG,KAAKI,MAAMN,GAAS,IAAME,KAAKI,MAAML,GAAQ,MAGlF,SAASM,EAAsBC,GACpC,IAEIT,EAAKC,EAAOC,EAFZQ,EAAU,IAAUD,EAqBxB,OAjBIC,GAAW,IACbV,EAAM,IACNC,EAAQ,cAAgBE,KAAKxD,IAAI+D,GAAW,eAC5CR,EACEQ,GAAW,GACP,EACA,eAAiBP,KAAKxD,IAAI+D,EAAU,IAAM,iBAEhDV,EAAM,cAAgBG,KAAKC,IAAIM,EAAU,IAAK,aAC9CT,EAAQ,eAAiBE,KAAKC,IAAIM,EAAU,IAAK,aACjDR,EAAO,KAGTF,EAAMA,EAAM,IAAM,IAAMA,EACxBC,EAAQA,EAAQ,IAAM,IAAMA,EAC5BC,EAAOA,EAAO,IAAM,IAAMA,EAEnB,QAAUC,KAAKI,MAAMP,GAAO,IAAOG,KAAKI,MAAMN,GAAS,IAAME,KAAKI,MAAML,GAAQ,MAGlF,SAASS,EAASX,EAAKC,EAAOC,GAcnC,IAAIJ,EAAU,SAZdE,EACEA,EAAM,OAAUG,KAAKC,KAAKJ,EAAM,MAAP,MAA+B,KAAOA,EAAM,OAWtC,SAVjCC,EACEA,EAAQ,OACJE,KAAKC,KAAKH,EAAQ,MAAT,MAAiC,KAC1CA,EAAQ,OAOqC,SANnDC,EACEA,EAAO,OACHC,KAAKC,KAAKF,EAAO,MAAR,MAAgC,KACzCA,EAAO,OAITN,EAAU,QAANI,EAAyB,QAARC,EAA0B,QAAPC,EACxCH,EAAU,MAANC,EAAyB,OAARC,EAAyB,QAAPC,EAGvCV,GAAKM,GAAKA,EAAIF,EAAIG,IAAIF,QAAQ,GAC9BJ,GAAKG,GAAKE,EAAIF,EAAIG,IAAIF,QAAQ,GAMlC,OAJIS,MAAMd,KAAIA,EAAI,GAEdc,MAAMb,KAAIA,EAAI,GAEX,CAACmB,WAAWpB,GAAIoB,WAAWnB,IA9GpC","file":"static/js/6.fd8bd88b.chunk.js","sourcesContent":["import { FaLightbulb, FaCheck } from \"react-icons/fa\";\nimport { MdDeleteForever, MdSystemUpdate } from \"react-icons/md\";\nimport { RiAlertLine } from \"react-icons/ri\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { cieToRgb, colorTemperatureToRgb } from \"../color\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\n\nconst Light = ({ api_key, id, light, modelIds, setType, setMessage }) => {\n\n\n  const deleteAlert = () => {\n    confirmAlert({\n      title: 'Delete light ' + light['name'],\n      message: 'Are you sure to do this?',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => deleteLight()\n        },\n        {\n          label: 'No'\n        }\n      ]\n    });\n  };\n\n  const deleteLight = () => {\n    axios.delete(`/api/${api_key}/lights/${id}`)\n      .then((fetchedData) => {\n        console.log(fetchedData.data);\n        setMessage('Light successfully deleted');\n        setType('none');\n        setType('success');\n      }).catch((error) => {\n        console.error(error)\n        setMessage('Error occured, check browser console');\n        setType('none');\n        setType('error');\n      });\n  }\n\n  const alertLight = () => {\n    axios.put(`/api/${api_key}/lights/${id}/state`, { \"alert\": \"select\" })\n      .then((fetchedData) => {\n        console.log(fetchedData.data);\n        setMessage('Light alerted');\n        setType('none');\n        setType('success');\n      }).catch((error) => {\n        console.error(error)\n        setMessage('Error occured, check browser console');\n        setType('none');\n        setType('error');\n      });\n  }\n\n  const setModelId = (modelid) => {\n    console.log({ [id]: modelid })\n    axios.post(`/light-types`, { [id]: modelid })\n      .then((fetchedData) => {\n        console.log(fetchedData.data);\n        setMessage('Modelid updated');\n        setType('none');\n        setType('success');\n      }).catch((error) => {\n        console.error(error)\n        setMessage('Error occured, check browser console');\n        setType('none');\n        setType('error');\n      });\n  }\n\n  return (\n    <>\n      <div className=\"iconContainer\">\n        <FaLightbulb onClick={() => alertLight()} />\n      </div>\n      {light[\"name\"]} {light['state']['reachable'] && <FaCheck title='Reachable' /> || <RiAlertLine title='Unrechable' />}<br />\n      <Dropdown options={modelIds} value={light[\"modelid\"]} onChange={(e) => setModelId(e.value)} placeholder=\"Choose light modelid\" />\n     Protocol: {light[\"protocol\"]}<br /> IP: {light[\"protocol_cfg\"][\"ip\"]}<br />\n      <MdDeleteForever title='Delete' onClick={() => deleteAlert()} />  <MdSystemUpdate title='Update' />\n      <br /><br />\n    </>\n  )\n}\n\nexport default Light\n","import { useState } from 'react'\nimport axios from \"axios\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nconst AddLight = () => {\n\n    const [protocol, setProtocol] = useState('auto')\n\n    const protocols = [\n        { value: 'auto', label: 'Autodetect' },\n        { value: 'domoticz', label: 'Domoticz' },\n        { value: 'flex', label: 'Flex' },\n        { value: 'jeedom', label: 'Jeedom' },\n        { value: 'milight', label: 'MiLight' },\n        { value: 'mibox', label: 'Mi Box' },\n        { value: 'wiz', label: 'Wiz' }\n    ]\n\n    const milightGroups = [\n        \"1\",\n        \"2\",\n        \"3\",\n        \"4\"\n    ]\n\n    const milightModes = [\n        { value: 'rgbw', label: 'RGBW' },\n        { value: 'cct', label: 'CCT' },\n        { value: 'rgb_cct', label: 'RGB-CCT' },\n        { value: 'rgb', label: 'RGB' }\n    ]\n\n    const lightModelIds = [\n        { value: 'LOM001', label: 'On/Off Plug' },\n        { value: 'LWB010', label: 'Dimmable Light' },\n        { value: 'LTW001', label: 'Color temperature Light' },\n        { value: 'LCT015', label: 'Color Light' },\n        { value: 'LST002', label: 'Color Strip' }\n    ]\n\n    return (\n\n        <form className='add-form'>\n            <Dropdown\n                options={protocols}\n                value={protocol}\n                onChange={(e) => setProtocol(e.value)}\n                placeholder=\"Choose light protocol\"\n            />\n            <div className='form-control'>\n                <label>Light Ip</label>\n                <input\n                    type='text'\n                    placeholder='192.168.x.x'\n                //value={deconzHost}\n                //onChange={(e) => setDeconzHost(e.target.value)}\n                />\n            </div>\n            {\n                protocol !== 'auto' && \n                <>\n                    <div className='form-control'>\n                        <label>Name</label>\n                        <input\n                            type='text'\n                            placeholder='Name used on diyhue'\n                        />\n                    </div>\n                    <div className='form-control'>\n                        <Dropdown\n                            options={lightModelIds}\n                            //value={protocol}\n                            //onChange={(e) => setProtocol(e.value)} \n                            placeholder=\"Emulated light type\"\n                        /></div>\n                </>\n            }\n            {\n                (protocol === 'milight' || protocol === 'mibox') && <>\n                    <div className='form-control'>\n                        <label>Device ID</label>\n                        <input\n                            type='text'\n                            placeholder='0x1234'\n                        />\n                    </div>\n                    <Dropdown\n                        options={milightModes}\n                        //value={protocol}\n                        //onChange={(e) => setProtocol(e.value)} \n                        placeholder=\"Choose light mode\"\n                    />\n                    <Dropdown\n                        options={milightGroups}\n                        //value={protocol}\n                        //onChange={(e) => setProtocol(e.value)} \n                        placeholder=\"Choose light group\"\n                    />\n                </>\n            }\n            {\n                protocol === 'mibox' &&\n                <div className='form-control'>\n                    <label>Port</label>\n                    <input\n                        type='number'\n                        placeholder='Mi Box port'\n                    />\n                </div>\n            }\n            {\n                protocol === 'domoticz' &&\n                <div className='form-control'>\n                    <label>Device ID</label>\n                    <input\n                        type='text'\n                        placeholder=''\n                    />\n                </div>\n\n            }\n            {\n                protocol === 'jeedom' && <>\n                    <div className='form-control'>\n                        <label>Light Api</label>\n                        <input\n                            type='text'\n                            placeholder='Light Api'\n                        />\n                    </div>\n                    <div className='form-control'>\n                        <label>Light ID</label>\n                        <input\n                            type='text'\n                            placeholder='Light ID'\n                        />\n                    </div>\n                </>\n            }\n            <div className='form-control'>\n                <input type='submit' value='Add Light' className='btn btn-block' />\n            </div>\n        </form>\n\n    )\n}\n\nexport default AddLight","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Light from \"../containers/Light\";\nimport AddLight from \"../containers/AddLight\";\nimport Flash from \"../containers/Flash\"\n\nexport default function Groups({ API_KEY }) {\n\n  const [lights, setLights] = useState({});\n  const [modelIds, setModelIds] = useState([]);\n  const [type, setType] = useState('none');\n  const [message, setMessage] = useState('no message');\n  const [lightForm, setLightForm] = useState(false);\n\n  const fetchLights = () => {\n    if (API_KEY !== undefined) {\n      axios\n        .get(`/lights`)\n        .then((fetchedData) => {\n          console.log(fetchedData.data);\n          setLights(fetchedData.data);\n        }).catch((error) => { console.error(error) });\n    }\n  }\n\n  const searchForLights = () => {\n    if (API_KEY !== undefined) {\n      axios\n        .post(`/api/${API_KEY}/lights`, \"\")\n        .then((fetchedData) => {\n          console.log(fetchedData.data);\n          setMessage('Searching for new lights...');\n          setType('none');\n          setType('success');\n        }).catch((error) => {\n          console.error(error)\n          setMessage('Error occured, check browser console');\n          setType('none');\n          setType('error');\n        });\n    };\n  }\n\n  const fetchModelIds = () => {\n    if (API_KEY !== undefined) {\n      axios\n        .get(`/light-types`)\n        .then((fetchedData) => {\n          console.log(fetchedData.data);\n          setModelIds(fetchedData.data['result']);\n        }).catch((error) => { console.error(error) });\n    }\n  }\n\n\n  useEffect(() => {\n    fetchLights();\n    fetchModelIds();\n    const interval = setInterval(() => {\n      fetchLights();\n    }, 2000); // <<-- ⏱ 1000ms = 1s\n    return () => clearInterval(interval);\n  }, [API_KEY]);\n\n  return (\n    <div className=\"content\">\n      {type !== 'none' && <Flash type={type} message={message} duration=\"5000\" setType={setType} />}\n      <div className=\"cardGrid\">\n        <div className=\"linkbtn\" onClick={() => searchForLights()}>Scan For Lights\n        <div className='btn btn-block'></div></div>\n        <a onClick={() => setLightForm(!lightForm)} className=\"someClassWithCursorPointer\">Add light manually</a>\n        {lightForm && <AddLight></AddLight>}\n        {Object.entries(lights).map(([id, light]) => (\n          <Light\n            key={id}\n            api_key={API_KEY}\n            id={id}\n            light={light}\n            modelIds={modelIds}\n            setType={setType}\n            setMessage={setMessage}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { FaTimes } from \"react-icons/fa\";\nimport FlashMessage from 'react-flash-message'\n\nexport default function Flash({type, message, duration, setType}) {\n\n    return (\n        <FlashMessage duration={duration} persistOnHover={true}>\n        <div className=\"notificationContainer\">\n            <div className={`notification ${type}`}><p>{message}</p><div className=\"icon\"><FaTimes onClick={() => setType('none')}/></div></div>\n        </div>\n        </FlashMessage>\n    );\n    }\n","export function cieToRgb(x, y, brightness) {\n  //Set to maximum brightness if no custom value was given (Not the slick ECMAScript 6 way for compatibility reasons)\n  if (brightness === undefined) {\n    brightness = 254;\n  }\n\n  var z = 1.0 - x - y;\n  var Y = (brightness / 254).toFixed(2);\n  var X = Y / y * x;\n  var Z = Y / y * z;\n\n  //Convert to RGB using Wide RGB D65 conversion\n  var red = X * 1.656492 - Y * 0.354851 - Z * 0.255038;\n  var green = -X * 0.707196 + Y * 1.655397 + Z * 0.036152;\n  var blue = X * 0.051713 - Y * 0.121364 + Z * 1.01153;\n\n  //If red, green or blue is larger than 1.0 set it back to the maximum of 1.0\n  if (red > blue && red > green && red > 1.0) {\n    green = green / red;\n    blue = blue / red;\n    red = 1.0;\n  } else if (green > blue && green > red && green > 1.0) {\n    red = red / green;\n    blue = blue / green;\n    green = 1.0;\n  } else if (blue > red && blue > green && blue > 1.0) {\n    red = red / blue;\n    green = green / blue;\n    blue = 1.0;\n  }\n\n  //Reverse gamma correction\n  red =\n    red <= 0.0031308\n      ? 12.92 * red\n      : (1.0 + 0.055) * Math.pow(red, 1.0 / 2.4) - 0.055;\n  green =\n    green <= 0.0031308\n      ? 12.92 * green\n      : (1.0 + 0.055) * Math.pow(green, 1.0 / 2.4) - 0.055;\n  blue =\n    blue <= 0.0031308\n      ? 12.92 * blue\n      : (1.0 + 0.055) * Math.pow(blue, 1.0 / 2.4) - 0.055;\n\n  //Convert normalized decimal to decimal\n  red = Math.round(red * 255);\n  green = Math.round(green * 255);\n  blue = Math.round(blue * 255);\n\n  if (isNaN(red)) red = 0;\n\n  if (isNaN(green)) green = 0;\n\n  if (isNaN(blue)) blue = 0;\n\n  return \"rgba(\" + Math.floor(red) + \",\" +  Math.floor(green) + \",\" + Math.floor(blue) + \",1)\";\n}\n\nexport function colorTemperatureToRgb(mireds) {\n  var hectemp = 20000.0 / mireds;\n\n  var red, green, blue;\n\n  if (hectemp <= 66) {\n    red = 255;\n    green = 99.4708025861 * Math.log(hectemp) - 161.1195681661;\n    blue =\n      hectemp <= 19\n        ? 0\n        : 138.5177312231 * Math.log(hectemp - 10) - 305.0447927307;\n  } else {\n    red = 329.698727446 * Math.pow(hectemp - 60, -0.1332047592);\n    green = 288.1221695283 * Math.pow(hectemp - 60, -0.0755148492);\n    blue = 255;\n  }\n\n  red = red > 255 ? 255 : red;\n  green = green > 255 ? 255 : green;\n  blue = blue > 255 ? 255 : blue;\n\n  return \"rgba(\" + Math.floor(red) + \",\" +  Math.floor(green) + \",\" + Math.floor(blue) + \",1)\";\n}\n\nexport function rgbToCie(red, green, blue) {\n  //Apply a gamma correction to the RGB values, which makes the color more vivid and more the like the color displayed on the screen of your device\n  red =\n    red > 0.04045 ? Math.pow((red + 0.055) / (1.0 + 0.055), 2.4) : red / 12.92;\n  green =\n    green > 0.04045\n      ? Math.pow((green + 0.055) / (1.0 + 0.055), 2.4)\n      : green / 12.92;\n  blue =\n    blue > 0.04045\n      ? Math.pow((blue + 0.055) / (1.0 + 0.055), 2.4)\n      : blue / 12.92;\n\n  //RGB values to XYZ using the Wide RGB D65 conversion formula\n  var X = red * 0.664511 + green * 0.154324 + blue * 0.162028;\n  var Y = red * 0.283881 + green * 0.668433 + blue * 0.047685;\n  var Z = red * 0.000088 + green * 0.07231 + blue * 0.986039;\n\n  //Calculate the xy values from the XYZ values\n  var x = (X / (X + Y + Z)).toFixed(4);\n  var y = (Y / (X + Y + Z)).toFixed(4);\n\n  if (isNaN(x)) x = 0;\n\n  if (isNaN(y)) y = 0;\n\n  return [parseFloat(x), parseFloat(y)];\n}\n"],"sourceRoot":""}